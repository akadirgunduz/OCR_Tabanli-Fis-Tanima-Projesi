import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import com.mysql.cj.xdevapi.Statement;

import net.sourceforge.tess4j.Tesseract;
import net.sourceforge.tess4j.TesseractException;

import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.Color;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Dimension;

public class Frame1 extends JFrame {
    static int isletmeId=0;
	static Connection conn = null;
	static String databaseName = "fis";
	static String url = "jdbc:mysql://localhost:3306/"+databaseName+"?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey";
	
	static String userName = "root"; 
	static String password = "kupa16";
	
	public String [] parse(String cumle){
		String[] kelime = null;
		kelime = cumle.split("\n"); 
		return kelime;
		}
	 private static Tesseract getTesseract() {

	        Tesseract instance = new Tesseract();
	        

	        instance.setDatapath("C:\\Users\\kartal\\Desktop\\Tess4J\\tessdata");
	        instance.setLanguage("tur");

	        //instance.setHocr(true);


	        return instance;

	    }
	 DefaultTableModel modelim=new DefaultTableModel(); 
	    Object[] kolonlar={"Isletme Adi","Tarih","Fis No","Ürünler","Toplam Fiyat"};
	    Object[] satirlar=new Object[5]; 
   
    public Frame1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
   
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        isletmeAdi = new javax.swing.JTextField();
        tarih = new javax.swing.JTextField();
        araBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        resimBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        resim = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        parse = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        modelim.setColumnIdentifiers(kolonlar);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));

        jLabel2.setText("Isletme Adi");

        jLabel3.setText("Tarih");

        isletmeAdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isletmeAdiActionPerformed(evt);
            }
        });

        araBtn.setText("ARA");
        araBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Isletme Adi", "Tarih", "Fis No", "Ürünler", "Toplam Fiyat" 
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        resimBtn.setText("RESIM YÜKLE");
        resimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					resimBtnActionPerformed(evt);
				} catch (TesseractException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InstantiationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 255, 51));
        jPanel2.setMaximumSize(new Dimension(50, 50));

        resim.setBackground(new java.awt.Color(0, 0, 240));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(resim, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 255, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(parse, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resimBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(isletmeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(araBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(tarih))))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(isletmeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(araBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resimBtn))
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>              }// </editor-fold>                        

    private void isletmeAdiActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void resimBtnActionPerformed(java.awt.event.ActionEvent evt) throws TesseractException, InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException {                                         
    	isletmeId++;
    	JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
        resim.setIcon(new ImageIcon(f.toString()));
        filename=f.getAbsolutePath();
        Tesseract tesseract = getTesseract();
        int x=0,d = 0;
        File file = new File(filename);
        String result = tesseract.doOCR(file);
        String[] fis =new Frame1().parse(result);
        String[][]sutunlar = new String[100][100];
        int kelimeSay=fis.length;
        int i,j=1,k,m = 0;
        StringBuffer strbuffer = new StringBuffer();
        for(i=0;i<fis.length;i++) {
        	System.out.println(fis[i]);
        }
        sutunlar[0][x]=fis[0];
		for(i=0; i<kelimeSay; i++) {
			if(fis[i].contains("TARIH")) {
				String[] kelime = null;
				kelime = fis[i].split(" "); 
				for(k=0; k<kelime.length; k++) {
					if(kelime[k].contains("TARIH")) {
						sutunlar[j][x]=kelime[k+1];
					}
				}
				j++;
			}
			if(fis[i].contains("FIS")){
				String[] kelime = null;
				kelime = fis[i].split(" "); 
				for(k=0; k<kelime.length; k++) {
					if(kelime[k].contains("FIS")) {
						sutunlar[j][x]=kelime[k+2];
					}
				}
				j++;i++;
				if(fis[i].contains("ÜRÜN")) {i++;}
				m=j;
				while(!fis[i].contains("TOPLAM")) {
					sutunlar[j][x]=fis[i];
					x++;
					i++;
				}j++;
			}
			if(fis[i].contains("TOPLAM")){x=0;
				String[] kelime = null;
				kelime = fis[i].split(" "); 
				for(k=0; k<kelime.length; k++) {
					if(kelime[k].contains("TOPLAM")) {
						sutunlar[j][x]=kelime[k+2];
					}
				}
				j++;
			}
		}
		System.out.println("sutun 1 "+sutunlar[0][0]);
	   System.out.println("sutun 2 "+sutunlar[1][0]);
	   System.out.println("sutun 3 "+sutunlar[2][0]);
	   System.out.println("sutun 4 "+sutunlar[3][0]);
	   System.out.println("sutun 5 "+sutunlar[4][0]);
	   //veritabani baglantisi
	  	Class.forName("com.mysql.jdbc.Driver").newInstance();
	       conn = DriverManager.getConnection(url,userName,password);
           PreparedStatement psmt=null;
           Statement stmt=null;
           String sql="SELECT i.id,i.ad,tarih,fisNo,u.urunler,f.toplam FROM isletme as i, fisler as f, urunler as u where i.ad='"+sutunlar[0][0]+"' and i.id=f.idisletme and u.fisNo=f.idfis;";
           psmt = conn.prepareStatement(sql);
           ResultSet rs=psmt.executeQuery();
           if(rs.next()){
               satirlar[0]=rs.getString(1);
               satirlar[1]=rs.getString(2);
               satirlar[2]=rs.getString(3);
               satirlar[3]=rs.getString(4);
               satirlar[4]=rs.getString(5);
           }  if(satirlar[1]!=null ) {        
           if(satirlar[1].equals(sutunlar[0][0])) {
        	   String sql2="INSERT INTO fisler (idfis, tarih, idisletme, toplam) " + 
		       		"VALUES ("+sutunlar[2][0]+", '"+sutunlar[1][0]+"' ,'"+satirlar[0]+"' ,'"+sutunlar[4][0]+"');";
		       PreparedStatement ps2 = conn.prepareStatement(sql2);
		       ps2 = conn.prepareStatement(sql2);
		       int status2 = ps2.executeUpdate(sql2);
		      if(status2!=0) {
		       	System.out.println("connect2");
		      }
		      for(int c=0;c<100;c++) {
		    	  if(!sutunlar[3][c].equals(null)) {
		      String sql3="INSERT INTO urunler (fisNo, urunler) " + 
			       		"VALUES ("+sutunlar[2][0]+", '"+sutunlar[3][c]+"');";
			       PreparedStatement ps3 = conn.prepareStatement(sql3);
			       ps3 = conn.prepareStatement(sql3);
			       int status3 = ps3.executeUpdate(sql3);
			      if(status3!=0) {
			       	System.out.println("connect3");
			      }}}
			 }}else {
				 String sql4="INSERT INTO isletme (id, ad) " + 
				       		"VALUES ("+isletmeId+", '"+sutunlar[0][0]+"');";
				       PreparedStatement ps = conn.prepareStatement(sql4);
				       ps = conn.prepareStatement(sql4);
				       int status = ps.executeUpdate(sql4);
				      if(status!=0) {
				       	System.out.println("connect");
				       }
		        	   String sql2="INSERT INTO fisler (idfis, tarih, idisletme, toplam) " + 
				       		"VALUES ("+sutunlar[2][0]+", '"+sutunlar[1][0]+"' ,'"+isletmeId+"' ,'"+sutunlar[4][0]+"');";
				       PreparedStatement ps2 = conn.prepareStatement(sql2);
				       ps2 = conn.prepareStatement(sql2);
				       int status2 = ps2.executeUpdate(sql2);
				      if(status2!=0) {
				       	System.out.println("connect2");
				      }
				      for(int c=0;c<100;c++) {
				    	  if(!sutunlar[3][c].equals(null)) {
				      String sql3="INSERT INTO urunler (fisNo, urunler) " + 
					       		"VALUES ("+sutunlar[2][0]+", '"+sutunlar[3][c]+"');";
					       PreparedStatement ps3 = conn.prepareStatement(sql3);
					       ps3 = conn.prepareStatement(sql3);
					       int status3 = ps3.executeUpdate(sql3);
					      if(status3!=0) {
					       	System.out.println("connect3");
					      }}
					 }
		      }
    }                                        

    private void araBtnActionPerformed(java.awt.event.ActionEvent evt) {  
    	String isletme=isletmeAdi.getText();
    	 String Tarih=tarih.getText();
    	 if((isletme.equals("") && Tarih.equals("")) || (!isletme.equals("") && !Tarih.equals(""))){
    		 JPanel panel= new JPanel();
    		 JOptionPane.showMessageDialog(panel, "Lütfen Isletme ya da Tarih Alanini Doldurunuz!");
    	 }
    	 else {
    	if(isletme.equals("")) {
    		 Connection conn=null;
             PreparedStatement psmt=null;
             Statement stmt=null;
             try{
            	 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 conn= DriverManager.getConnection(url,userName,password);
                 String sql="SELECT i.ad,tarih,fisNo,u.urunler,f.toplam FROM isletme as i, fisler as f, urunler as u where f.tarih='"+Tarih+"' and i.id=f.idisletme and u.fisNo=f.idfis;";
                 psmt = conn.prepareStatement(sql);
                 ResultSet rs=psmt.executeQuery();
                 while(rs.next()){
                     satirlar[0]=rs.getString(1);
                     satirlar[1]=rs.getString(2);
                     satirlar[2]=rs.getString(3);
                     satirlar[3]=rs.getString(4);
                     satirlar[4]=rs.getString(5);
                     modelim.addRow(satirlar);
                 }            
                 rs.close();
                 psmt.close();
                 conn.close();          
             }catch(SQLException se){
                 se.printStackTrace();
             }catch(Exception e){
                 e.printStackTrace();
             }
             jTable1.setModel(modelim);
    	}
    	else {
    		 Connection conn=null;
             PreparedStatement psmt=null;
             Statement stmt=null;
             try{
            	 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 conn= DriverManager.getConnection(url,userName,password);
                 String sql="SELECT i.ad,tarih,fisNo,u.urunler,f.toplam FROM isletme as i, fisler as f, urunler as u where i.ad='"+isletme+"' and i.id=f.idisletme and u.fisNo=f.idfis;";
                 psmt = conn.prepareStatement(sql);
                 ResultSet rs=psmt.executeQuery();
                 while(rs.next()){
                     satirlar[0]=rs.getString(1);
                     satirlar[1]=rs.getString(2);
                     satirlar[2]=rs.getString(3);
                     satirlar[3]=rs.getString(4);
                     satirlar[4]=rs.getString(5);
                     modelim.addRow(satirlar);
                 }            
                 rs.close();
                 psmt.close();
                 conn.close();          
             }catch(SQLException se){
                 se.printStackTrace();
             }catch(Exception e){
                 e.printStackTrace();
             }
             jTable1.setModel(modelim);
    	}
    	 }
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws TesseractException, InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException {
   
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton araBtn;
    private javax.swing.JTextField isletmeAdi;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel parse;
    private javax.swing.JLabel resim;
    private javax.swing.JButton resimBtn;
    private javax.swing.JTextField tarih;
    // End of variables declaration                   
    byte[] photo=null;
    String filename=null;
}
